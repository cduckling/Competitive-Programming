#include <iostream>
#include <vector>
#include <algorithm>
#include <queue>
using namespace std;

#define fir first
#define sec second

typedef long long ll;
typedef pair<ll, ll> pii;
typedef vector<pair<ll, ll>> vpii;

void solve() {
    ll n; cin >> n;

    vpii st (n + 1); for (ll i = 1; i <= n; i++) cin >> st[i].fir >> st[i].sec, st[i].fir += st[i].sec; sort(st.begin(), st.end());

    ll cnt = 0, ok = 0;

    priority_queue<ll> used;

    for (ll i = 1; i <= n; i++) {
        ok += st[i].fir - st[i - 1].fir;

        if (ok - st[i].sec >= 0) {
            ok -= st[i].sec, cnt++; used.push(st[i].sec);
        } else if (!used.empty() && used.top() > st[i].sec) {
            ok += used.top() - st[i].sec; used.pop(); used.push(st[i].sec);
        }
    }

    cout << cnt << "\n";
}

int main() {
    ios_base::sync_with_stdio(false); cin.tie(nullptr);

    ll t; cin >> t; while (t--) solve();

    return 0;
}
